services:
  ghostfolio:
    image: ghostfolio/ghostfolio:2
    container_name: ghostfolio
    restart: unless-stopped
    init: true
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3333/api/v1/health']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - frontend 
      - backend

  postgres:
    image: postgres:15
    container_name: ghostfolio_postgres
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -d "$${POSTGRES_DB}" -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: ghostfolio_redis
    restart: unless-stopped
    user: '999:1000'
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    command:
      - /bin/sh
      - -c
      - >
        redis-server
        --port "$${REDIS_PORT:?REDIS_PORT variable is not set}"
        --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    healthcheck:
      test:
        ['CMD-SHELL', 'redis-cli -p "$${REDIS_PORT}" --pass "$${REDIS_PASSWORD}" ping | grep PONG']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

networks:
  frontend:
    name: frontend
    external: true
  backend:

volumes:
  postgres:
